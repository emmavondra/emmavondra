{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 50,
   "id": "36365d83-c75e-437a-a3b4-160184340908",
   "metadata": {},
   "outputs": [],
   "source": [
    "#imports the pandas library\n",
    "\n",
    "import pandas as pd"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "id": "3f580f50-72c5-44af-8120-93fe1f91bad2",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "          pws_id                        pws_name epa_region_code  \\\n",
      "0      NE3120835                      LITTLE USA        Region 7   \n",
      "1      NE3121452                  ELKHORN SHORES        Region 7   \n",
      "2      NE3121245                   DRIFTWOOD INN        Region 7   \n",
      "3      NE3150475  TYSON FRESH MEATS INC  MADISON        Region 7   \n",
      "4      NE3121401   SANDY POINTE LAKE DEVELOPMENT        Region 7   \n",
      "...          ...                             ...             ...   \n",
      "12718  NE3117308              PENDER, VILLAGE OF        Region 7   \n",
      "12719  NE3115902             GOEHNER, VILLAGE OF        Region 7   \n",
      "12720  NE3115905                 SEWARD, CITY OF        Region 7   \n",
      "12721  NE3105907            MILLIGAN, VILLAGE OF        Region 7   \n",
      "12722  NE3115503             CERESCO, VILLAGE OF        Region 7   \n",
      "\n",
      "      primacy_agency pws_type owner_type primary_source activity_status  \\\n",
      "0           Nebraska    TNCWS      State   Ground water          Active   \n",
      "1           Nebraska    TNCWS      State   Ground water          Active   \n",
      "2           Nebraska    TNCWS      State   Ground water          Active   \n",
      "3           Nebraska   NTNCWS      State   Ground water          Active   \n",
      "4           Nebraska      CWS      State   Ground water          Active   \n",
      "...              ...      ...        ...            ...             ...   \n",
      "12718       Nebraska      CWS      State   Ground water          Active   \n",
      "12719       Nebraska      CWS      State   Ground water          Active   \n",
      "12720       Nebraska      CWS      State   Ground water          Active   \n",
      "12721       Nebraska      CWS      State   Ground water          Active   \n",
      "12722       Nebraska      CWS      State   Ground water          Active   \n",
      "\n",
      "       season_end_date  population  ... season_start_date last_reported  \\\n",
      "0                  NaN         200  ...             45170       45199.0   \n",
      "1                  NaN          35  ...             45170       45199.0   \n",
      "2                  NaN          25  ...             45170       45199.0   \n",
      "3                  NaN        1100  ...             45170       45199.0   \n",
      "4                  NaN         100  ...             45139       45169.0   \n",
      "...                ...         ...  ...               ...           ...   \n",
      "12718              NaN        1100  ...             28444       28473.0   \n",
      "12719              NaN         185  ...             28422       28452.0   \n",
      "12720              NaN        7500  ...             28412       28442.0   \n",
      "12721              NaN         244  ...             28321       28351.0   \n",
      "12722              NaN         919  ...             28298       28327.0   \n",
      "\n",
      "      submission_quarter return_to_compliance_date contaminant_code  \\\n",
      "0                  Known                       NaN              NaN   \n",
      "1                  Known                       NaN              NaN   \n",
      "2                  Known                       NaN              NaN   \n",
      "3                  Known                       NaN              NaN   \n",
      "4                  Known                       NaN              SIF   \n",
      "...                  ...                       ...              ...   \n",
      "12718              Known                       NaN              NaN   \n",
      "12719              Known                       NaN              NaN   \n",
      "12720              Known                       NaN              NaN   \n",
      "12721              Known                       NaN              NaN   \n",
      "12722              Known                       NaN              NaN   \n",
      "\n",
      "                          submission_year  major_violation  connections  \\\n",
      "0                                     NaN                Y          NaN   \n",
      "1                                     NaN                Y          NaN   \n",
      "2                                     NaN                Y          NaN   \n",
      "3                                     NaN                Y          NaN   \n",
      "4      State Public Notification received                Y          NaN   \n",
      "...                                   ...              ...          ...   \n",
      "12718                                 NaN              NaN          NaN   \n",
      "12719                                 NaN              NaN          NaN   \n",
      "12720                                 NaN              NaN          NaN   \n",
      "12721                                 NaN              NaN          NaN   \n",
      "12722                                 NaN              NaN          NaN   \n",
      "\n",
      "      first_reported  submission_year.1  \n",
      "0                  3              45244  \n",
      "1                  3              45244  \n",
      "2                  3              45244  \n",
      "3                  3              45244  \n",
      "4                  3              45244  \n",
      "...              ...                ...  \n",
      "12718              2              29494  \n",
      "12719              2              29494  \n",
      "12720              2              29494  \n",
      "12721              2              29494  \n",
      "12722              2              29494  \n",
      "\n",
      "[12723 rows x 26 columns]\n"
     ]
    }
   ],
   "source": [
    "#This reads the CSV files and inserts the data into a dataframe that we can extract information from\n",
    "\n",
    "nebraska_data = pd.read_csv('Vondra_Lab2_Violation Report_Formatted.csv')\n",
    "nebraska_data = pd.DataFrame(nebraska_data)\n",
    "print(nebraska_data)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "id": "6ccf926e-8d41-473d-a386-9223104d006d",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "           max  min        mean  median\n",
      "pws_type                               \n",
      "CWS       5348    1  103.423529    10.0\n",
      "NTNCWS     315    1   29.041667     1.0\n",
      "TNCWS     2059    5  359.444444    29.0\n"
     ]
    }
   ],
   "source": [
    "#1\n",
    "#groups data by category\n",
    "#summary of data created, easier for reading and comprehending the data\n",
    "#took the max, min, mean and median of the grouped data for display\n",
    "\n",
    "grouped_data = nebraska_data.groupby(['pws_type','contaminant']).size()\n",
    "data_summary = grouped_data.reset_index(name = 'n')\n",
    "statistical_summary = data_summary.groupby('pws_type').agg(max=('n','max'),\n",
    "                                                              min=('n','min'),\n",
    "                                                              mean=('n','mean'),\n",
    "                                                              median=('n','median'))\n",
    "\n",
    "print(statistical_summary)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 56,
   "id": "16b15cbb-20e8-4d1e-bc73-4080bf95863a",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "    pws_type                                        contaminant  \\\n",
      "0        CWS                              1,1,1-Trichloroethane   \n",
      "1        CWS                              1,1,1-Trichloroethane   \n",
      "2        CWS                              1,1,2-Trichloroethane   \n",
      "3        CWS                              1,1,2-Trichloroethane   \n",
      "4        CWS                               1,1-Dichloroethylene   \n",
      "..       ...                                                ...   \n",
      "227    TNCWS                                      Public Notice   \n",
      "228    TNCWS                        Revised Total Coliform Rule   \n",
      "229    TNCWS                        Revised Total Coliform Rule   \n",
      "230    TNCWS                        Revised Total Coliform Rule   \n",
      "231    TNCWS  Stage 1 Disinfectants and Disinfection Byprodu...   \n",
      "\n",
      "    population_category  count  \n",
      "0                 small      8  \n",
      "1            very small      2  \n",
      "2                 small      2  \n",
      "3            very small      2  \n",
      "4                 large      1  \n",
      "..                  ...    ...  \n",
      "227          very small    211  \n",
      "228               small      3  \n",
      "229          very large      1  \n",
      "230          very small    372  \n",
      "231          very small      6  \n",
      "\n",
      "[232 rows x 4 columns]\n"
     ]
    }
   ],
   "source": [
    "#2\n",
    "\n",
    "#develop a new summary\n",
    "#group the new summary and get the min, max, mean, and median of contaminants\n",
    "\n",
    "def assign_category(x):\n",
    "    if x < 500:\n",
    "        return \"very small\"\n",
    "    elif 501 <= x <= 3300:\n",
    "        return \"small\"\n",
    "    elif 3301 <= x <= 10000:\n",
    "        return \"medium\"\n",
    "    elif 10001 <= x <= 100000:\n",
    "        return \"large\"\n",
    "    else:\n",
    "        return \"very large\"\n",
    "\n",
    "#group data to categories\n",
    "nebraska_data['population_category'] = nebraska_data['population'].apply(assign_category)\n",
    "subset1=nebraska_data[(nebraska_data['activity_status'] == \"Active\")]\n",
    "\n",
    "\n",
    "newsummary1 = nebraska_data.groupby(['pws_type','contaminant','population_category']).size().reset_index(name='count')\n",
    "\n",
    "#export to a CSV for a deliverable\n",
    "newsummary1.to_csv(\"Task2.csv\")\n",
    "\n",
    "print(newsummary1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "id": "37392fd9-976d-47c4-b5cb-abb733556c50",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "             primary_source  \\\n",
      "20             Ground water   \n",
      "21             Ground water   \n",
      "22             Ground water   \n",
      "23             Ground water   \n",
      "24             Ground water   \n",
      "25             Ground water   \n",
      "26             Ground water   \n",
      "27             Ground water   \n",
      "28             Ground water   \n",
      "29             Ground water   \n",
      "56             Ground water   \n",
      "57             Ground water   \n",
      "58             Ground water   \n",
      "59             Ground water   \n",
      "60             Ground water   \n",
      "61             Ground water   \n",
      "77   Ground water purchased   \n",
      "78   Ground water purchased   \n",
      "79   Ground water purchased   \n",
      "80   Ground water purchased   \n",
      "89   Ground water purchased   \n",
      "95            Surface water   \n",
      "96            Surface water   \n",
      "97  Surface water purchased   \n",
      "\n",
      "                                       violation_type population_category  \\\n",
      "20       Maximum Contaminant Level Violation, Average               small   \n",
      "21       Maximum Contaminant Level Violation, Average               small   \n",
      "22       Maximum Contaminant Level Violation, Average               small   \n",
      "23       Maximum Contaminant Level Violation, Average               small   \n",
      "24       Maximum Contaminant Level Violation, Average               small   \n",
      "25       Maximum Contaminant Level Violation, Average               small   \n",
      "26       Maximum Contaminant Level Violation, Average               small   \n",
      "27       Maximum Contaminant Level Violation, Average               small   \n",
      "28       Maximum Contaminant Level Violation, Average               small   \n",
      "29       Maximum Contaminant Level Violation, Average               small   \n",
      "56  Maximum Contaminant Level Violation, Single Sa...               small   \n",
      "57  Maximum Contaminant Level Violation, Single Sa...               small   \n",
      "58  Maximum Contaminant Level Violation, Single Sa...               small   \n",
      "59  Maximum Contaminant Level Violation, Single Sa...               small   \n",
      "60  Maximum Contaminant Level Violation, Single Sa...               small   \n",
      "61  Maximum Contaminant Level Violation, Single Sa...               small   \n",
      "77       Maximum Contaminant Level Violation, Average               small   \n",
      "78       Maximum Contaminant Level Violation, Average               small   \n",
      "79       Maximum Contaminant Level Violation, Average               small   \n",
      "80       Maximum Contaminant Level Violation, Average               small   \n",
      "89  Maximum Contaminant Level Violation, Single Sa...               small   \n",
      "95       Maximum Contaminant Level Violation, Average               small   \n",
      "96       Maximum Contaminant Level Violation, Average               small   \n",
      "97       Maximum Contaminant Level Violation, Average               small   \n",
      "\n",
      "   pws_type                      contaminant  count  \n",
      "20      CWS               1,2-Dichloroethane      1  \n",
      "21      CWS                          Arsenic     81  \n",
      "22      CWS             Carbon tetrachloride      4  \n",
      "23      CWS  Combined Radium (-226 and -228)      6  \n",
      "24      CWS                 Combined Uranium     86  \n",
      "25      CWS   Gross Alpha, Excl. Radon and U      6  \n",
      "26      CWS                          Nitrate     20  \n",
      "27      CWS                  Nitrate-Nitrite    139  \n",
      "28      CWS                         Selenium     66  \n",
      "29      CWS              Tetrachloroethylene      7  \n",
      "56      CWS             Carbon tetrachloride      1  \n",
      "57      CWS                         Fluoride      2  \n",
      "58      CWS                          Nitrate     13  \n",
      "59      CWS                  Nitrate-Nitrite    136  \n",
      "60      CWS                         Selenium     51  \n",
      "61      CWS              Tetrachloroethylene      1  \n",
      "77      CWS                          Arsenic      1  \n",
      "78      CWS                 Combined Uranium    105  \n",
      "79      CWS   Gross Alpha, Excl. Radon and U      2  \n",
      "80      CWS                          Nitrate      1  \n",
      "89      CWS                          Nitrate      1  \n",
      "95      CWS                             TTHM     33  \n",
      "96      CWS    Total Haloacetic Acids (HAA5)      1  \n",
      "97      CWS                             TTHM     11  \n"
     ]
    }
   ],
   "source": [
    "#3\n",
    "\n",
    "#filtering the data by water source, active systems, MCL violations\n",
    "subset2=nebraska_data[(nebraska_data['activity_status'] == \"Active\")&\n",
    "            (nebraska_data['violation_type'] == \"Maximum Contaminant Level Violation, Single Sample\")|\n",
    "            (nebraska_data['violation_type'] == \"Maximum Contaminant Level Violation, E. coli\")|\n",
    "            (nebraska_data['violation_type'] == \"Maximum Contaminant Level Violation, Monthly\")|\n",
    "            (nebraska_data['violation_type'] == \"Maximum Contaminant Level Violation, Acute\")|\n",
    "            (nebraska_data['violation_type'] == \"Maximum Contaminant Level Violation, Average\")]\n",
    "\n",
    "#group by each category\n",
    "newsummary2= subset2.groupby(['primary_source','violation_type','population_category','pws_type', 'contaminant']).size().reset_index(name='count')\n",
    "newsummary3=newsummary2[(newsummary2['population_category'] == \"small\")]\n",
    "newsummary4=newsummary3[(newsummary3['pws_type'] == \"CWS\")]\n",
    "\n",
    "#export to a CSV for a deliverable\n",
    "newsummary4.to_csv(\"Task3.csv\")\n",
    "\n",
    "print(newsummary4)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "1d5237e8-15dc-4bd7-92d7-561a4d1ecf2e",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "fa206434-3664-48e4-a2d8-eccefd87ceb0",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "anaconda-2024.02-py310",
   "language": "python",
   "name": "conda-env-anaconda-2024.02-py310-py"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.14"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
